Test many-to-many (Spell/CharacterClasses)

ElixirProject.CharacterClasses.Commands.CreateCharacterClasses.process(%{nameClass: "warrior"})
ElixirProject.CharacterClasses.Commands.CreateCharacterClasses.process(%{nameClass: "mage"})
ElixirProject.MagickSchools.Commands.CreateMagickSchool.process(%{nameSchool: "Illusion"})
ElixirProject.MagickSchools.Commands.CreateMagickSchool.process(%{nameSchool: "Destruction"})
ElixirProject.SourcesSpells.Commands.CreateSourceSpell.process(%{nameSource: "Homebrew"})
ElixirProject.SourcesSpells.Commands.CreateSourceSpell.process(%{nameSource: "Brew"})
{a,b} = ElixirProject.MagickSchool.Queries.GetMagickSchool.process(1)
{c,d} = ElixirProject.SourcesSpells.Queries.GetSourceSpell.process(2)
{status, chrClass} = ElixirProject.CharacterClasses.Queries.GetCharacterClass.process(1)
{status, chrClass2} = ElixirProject.CharacterClasses.Queries.GetCharacterClass.process(2)
{status, spell} = ElixirProject.Spells.Commands.CreateSpell.process(%{nameSpell: "Wjuh", level: 2, castingTime: "Mnoga", duration: "lolka", magickSchool_id: b.id, sourceSpell_id: d.id, description: "hahahahahahah"}, characterClasses: [chrClass, chrClass2])
{status, spellCharacterClass} = ElixirProject.Spells.Queries.AddCharacterClass.process(%{spell_id: spell.id, characterClasses_id: chrClass.id})

Test many-to-many (Spellbook/Spell)

ElixirProject.Accounts.Commands.CreateUser.process(%{email: "Padla@mail.ru", login: "BomBom", password: "LolKek23"})
{status, user} = ElixirProject.Accounts.Queries.GetUser.process(1)
ElixirProject.Spellbooks.Commands.CreateSpellbook.process(%{name_spellbook: "JoinTheArmySon", user_id: user.id})
{status, spellbook} = ElixirProject.Spellbooks.Queries.GetSpellbook.process(1)
{status, spell} = ElixirProject.Spells.Queries.GetSpell.process(1)

ElixirProject.Spellbooks.Queries.AddSpell.process(spellbook, %{spells: [spell]})